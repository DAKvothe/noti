# Application configuration
spring:
  application:
    name: cpe-porweb-bknotification
#  profiles:
#    active: test

apparsenal:
  backing-services:
    database:
      username: ${DATABASE_USER:src/test/resources/database/secret-db-username}
      password: ${DATABASE_PASSWORD:src/test/resources/database/secret-db-password}
      driver-class-name: org.h2.Driver
      url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1

# Server port
server:
  port: 8080
  host: http://localhost
  #servlet:
    #context-path: /cpe-porweb-bknotification 

# Arsenal core library settings
arsenal:
  logging:
    dev-mode: true
    isGluon: true
    company: company
    componentName: component-name
    componentId: component-id
    componentType: component-type
    appName: app-name
    appId: app-id
  library:
    core:
      api:
        enable-docs: true # Disable Swagger/OpenAPI documentation
        docs-base-package: com.santander.cpe.porweb.resource # Package where the resource classes are found
        #archetypekey: ####415253454E414C####

# Database settings
spring.jpa:
  database: H2
  show-sql: true
  generate-ddl: true
  hibernate:
    ddl-auto: create
  properties:
    hibernate:
      default_schema: public

spring.sql.init:
  continue-on-error: false
  # The database connection can be made automatically if the user/password properties
  # are set directly in the environment variables declared below.
  #
  # However, we recommend that you store these credentials in OpenShift Secrets.
  #
  # When using Secrets, environment variables now count the path to secret files.
  #
  # Spring Boot doesn't "know" how to open Secret files and read their contents, for this reason
  # We use a custom DataSource (see DatabaseConfig class) that does this process.
  #
  # See credential settings further above in the apparsenalname.backing-services.database section.
  platform: h2

# Logging
# Overriding log groups and levels
logging:
  group:
    web: org.springframework.core.codec, org.springframework.http, org.springframework.web
    spring: org.springframework.core.env
    servlet: org.springframework.boot.web, org.apache.catalina, org.apache.coyote, org.apache.tomcat
    data: org.springframework.jdbc.core, org.hibernate.sql, org.springframework.orm.jpa, org.hibernate, org.jooq.tools.LoggerListener
    hikari: com.zaxxer.hikari
    app: com.santander.cpe.porweb
  level:
    root: WARN
    spring: INFO
    app: INFO
    servlet: WARN
    web: WARN
    data: WARN
    hikari: ${LOG_LEVEL_HIKARI:DEBUG} 

